// /*
//  * App Global CSS
//  * ----------------------------------------------------------------------------
//  * Put style rules here that you want to apply globally. These styles are for
//  * the entire app and not just one component. Additionally, this file can be
//  * used as an entry point to import other CSS/Sass files to be included in the
//  * output CSS.
//  * For more information on global stylesheets, visit the documentation:
//  * https://ionicframework.com/docs/layout/global-stylesheets
//  */

// /* Core CSS required for Ionic components to work properly */
// @import "@ionic/angular/css/core.css";

// /* Basic CSS for apps built with Ionic */
// @import "@ionic/angular/css/normalize.css";
// @import "@ionic/angular/css/structure.css";
// @import "@ionic/angular/css/typography.css";
// @import "@ionic/angular/css/display.css";

// /* Optional CSS utils that can be commented out */
// @import "@ionic/angular/css/padding.css";
// @import "@ionic/angular/css/float-elements.css";
// @import "@ionic/angular/css/text-alignment.css";
// @import "@ionic/angular/css/text-transformation.css";
// @import "@ionic/angular/css/flex-utils.css";

// /**
//  * Ionic Dark Mode
//  * -----------------------------------------------------
//  * For more info, please see:
//  * https://ionicframework.com/docs/theming/dark-mode
//  */

// /* @import "@ionic/angular/css/palettes/dark.always.css"; */
// /* @import "@ionic/angular/css/palettes/dark.class.css"; */
// @import "@ionic/angular/css/palettes/dark.system.css";

// @import "@ionic/angular/css/palettes/dark.system.css";



.custom-loading {
    --background: rgba(0, 0, 0, 0.8); // Background color
    color: #ffffff; // Text color
    // .loading-spinner {
    //   // Customize spinner styles
    // }
    // .loading-content {
    //   // Customize content styles
    // }
  }

  .action-column2 {
    width: 120px; /* Adjust width as needed */
}

.sl-column {
  width: 50px; /* Adjust width as needed */
}

.patient-item ion-radio {
  margin-right: 1rem; /* Spacing between radio button and details */
}

ion-modal {
  &.custom-modal {
    --width: 80%;
    --height: 70vh;
    --border-radius: 10px;
    --max-width: 600px;
    --max-height: 80vh;
  }

  .modal-wrapper {
    width: var(--width);
    height: var(--height);
    max-width: var(--max-width);
    max-height: var(--max-height);
    border-radius: var(--border-radius);
  }

  
}

.cpoint{
    cursor: pointer;
}
div:where(.swal2-container) .swal2-select {
  max-width: 85% !important;
}

@media (min-width: 768px) {  /* Adjust the width for your breakpoint */
  ion-modal {
    --width: 80%;
    --height: 80%;
    --border-radius: 15px;
  }
}

.swal2-container {
  z-index: 99999 !important; /* Ensure this is higher than the Ionic modal */
}


html, body {
  height: 100%;
  overflow: auto; /* Enable scrolling */
}

body.keyboard-open {
  padding-bottom: 300px; /* Adjust space for keyboard */
  overflow-y: scroll; /* Force scrolling when the keyboard is open */
}


.bg-blue{
  background-color: #25278c;
  color: white;
}


.bg-blue:hover{
  background-color: #00039b;
  color: rgb(255, 255, 255);
}


input[type="date"].form-control::-webkit-calendar-picker-indicator {
  color: black; /* Set icon color to black */
  opacity: 1; /* Ensure visibility */
}
/* Hide the default icon and add a custom one in black */
input[type="date"].form-control {
  position: relative;
}

input[type="date"].form-control::-webkit-calendar-picker-indicator {
  opacity: 0; /* Hide the default icon */
}
input[type="date"].form-control::after {
  content: '\1F4C5'; /* Unicode for calendar icon */
  font-size: 18px;
  color: black; /* Set icon color to black */
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none; /* Make the custom icon non-interactive */
}


.table-responsive {
  margin-top: 20px;
}
.table thead th {
  background-color: #25278c;
  color: #fff;
}
/* Align search bar and button */
// .table-controls {
//     display: flex;
//     justify-content: space-between;
//     align-items: center;
//     margin-bottom: 15px;
// }
/* Adjust the button's appearance */
.btn-custom {
  background-color: #28a745;
  color: white;
  border: none;
}
.btn-custom:hover {
  background-color: #218838;
}



// body {
//   height: 200vh; /* Extend page height for testing scrolling */
//   padding: 20px;
// }
// .form-container {
//   margin-top: 100px; /* Add some space for scrolling */
// }
// input,
// textarea {
//   display: block;
//   margin-bottom: 20px;
// }

// body {
//   position: relative;
//   overflow-y: auto; /* Enable vertical scrolling */
// }

// input:focus,
// textarea:focus {
//   outline: none;
//   position: relative;
//   scroll-margin-bottom: 200px; /* Adjust for keyboard height */
// }




/* Remove bullet point from li */
.device-item {
  list-style: none;
}

/* Toggle Switch Container */
.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
  margin-left: 10px;
}

/* Hide default checkbox */
.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* Slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: 0.4s;
  border-radius: 24px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}

/* Checked state styles */
input:checked + .slider {
  background-color: #4CAF50;
}

input:checked + .slider:before {
  transform: translateX(26px);
}

/* Rounded slider */
.slider.round {
  border-radius: 24px;
}


